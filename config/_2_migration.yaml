gitlab:
  migrations:
    # Default values for migrations.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    image: { }
      # pullPolicy: IfNotPresent
      # pullSecrets: []
    # repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ee
    # tag: master

    init:
      image: { }
      # repository:
      # tag:
      resources: {}
#        requests:
#          cpu: 500m
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        capabilities:
          drop: [ "ALL" ]

    # Tolerations for pod scheduling
    tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
    nodeSelector:
      kubernetes.io/hostname: "dev01"
    # Annotations for the job
    annotations: { }
    # Annotations for the pod
    podAnnotations: { }

    # Priority class assigned to pods
    priorityClassName: ""

    # Labels for the job
    podLabels: { }
    common:
      labels: { }

    enabled: true
    initialRootPassword: { }
    redis:
      auth: { }
    gitaly:
      host: 'gitlab-gitaly.gitlab.svc'
      port: 8075
      serviceName: 'gitlab-gitaly'
      authToken:
        secret: "gitaly-secrets"
        key: "token"

    psql: { }
    # port: 5432

    global:
      psql: { }
        # host: '0.0.0.0'
        # port: '5432'
        # database: 'gitlabhq_production'
        # username: 'gitlab'
        # applicationName:
        # preparedStatements: false
        # databaseTasks: true
        # password:
        #   secret: gitlab-postgres
        #   key: psql-password
        # ssl:
        #   secret: gitlab-ssl-secret
        #   clientKey: client-key.pem
      #   clientCertificate: client-cert.pem
      #   serverCA: server-ca.pem
      redis:
        auth: { }
      gitaly:
        internal:
          names: [ "default" ]
        external: [ ]
        authToken: { }
    resources: {}
#      limits:
#        cpu: 700m
#        memory: 1.5G
#      requests: {}
#        cpu: 500m
#        memory: 1Gi
    activeDeadlineSeconds: 3600
    backoffLimit: 6

    ## Allow to overwrite under which User and Group the Pod will be running.
    securityContext:
      runAsUser: 1000
      fsGroup: 1000
      # fsGroupChangePolicy: OnRootMismatch
      seccompProfile:
        type: "RuntimeDefault"

    ## Allow to overwrite the specific security context under which the container is running.
    containerSecurityContext:
      runAsUser: 1000
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop: [ "ALL" ]

    ## Enable deployment to use a serviceAccount
    serviceAccount:
      enabled: false
      create: false
      annotations: { }
      ## Used for local override of global ServiceAccount token mounting
      # automountServiceAccountToken: false
      ## Name to be used for serviceAccount, otherwise defaults to chart fullname
      # name: